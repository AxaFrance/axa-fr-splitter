# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run unit tests
        run: |
          cd src/
          python -m unittest
  tags:
    runs-on: ubuntu-latest
    needs: unit_tests
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@master
      - name: Bump version and push tag
        id: tag_version
        if: github.ref == 'refs/heads/main'
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Add tag to output step
        id: tag
        if: github.ref == 'refs/heads/main'
        run: echo "::set-output name=new_version::${{ steps.tag_version.outputs.new_version }}"
  deploy:
    runs-on: ubuntu-latest
    needs: tags
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: python -m pip install --upgrade pip build twine

    - name: Bump version
      run: sed -i 's/__version_ = "0.0.0"/__version_ = "${{ needs.tags.outputs.new_version }}"/g' src/splitter/__init__.py

    - name: Build package
      run: python -m build

    - name: Publish package
      if: github.ref == 'refs/heads/main'
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload -u __token__ dist/*
